from typing import List, Optional

class Tensor:
    def __new__(
        cls,
        shape: List[int],
        data: List[float],
        requires_grad: bool,
        grad: Optional[List[float]],
        graph: Optional[Graph],
    ): ...
    def get_shape(self) -> List[int]: ...
    def get_data(self) -> List[float]: ...
    def get_requires_grad(self) -> bool: ...
    def get_grad(self) -> Optional[Tensor]: ...
    def get_graph(self) -> Optional[Graph]: ...
    def __add__(self, other: Tensor) -> Tensor: ...
    def __mul__(self, other: Tensor) -> Tensor: ...
    def __matmul__(self, other: Tensor) -> Tensor: ...
    def transpose(self) -> Tensor: ...
    def reduce_sum(self) -> Tensor: ...
    def backward(self, grad: Optional[Tensor]) -> None: ...

class Graph: ...
